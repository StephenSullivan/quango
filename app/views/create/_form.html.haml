= "create: " << @sectional.to_s
= f.error_messages
= error_messages_for(:user)

.group
  = f.label :title, "#{t(:mode, :scope => "activerecord.attributes.item")}*", :class => "label"
  -current_group.sections.each do |section|
    -if !section.hidden?
      -if section.name == @active_section
        = "<span style='background-color:pink'>"
        = f.radio_button :section, section.name, :class => "radio_button", :checked => true
        = "#{section.mode}" << "</span>"
        
        - @mode = section.name
      -else
        = f.radio_button :section, section.name, :class => "radio_button"
        = "#{section.mode}"

.group
  = "To be hidden"
  = f.text_field :section, :value => @active_section



.group
  = f.label :title, "#{t(:title, :scope => "activerecord.attributes.item")}*", :class => "label"
  = f.text_field :title, :class => "text_field"
  .description
    = current_group.item_prompt

-if @mode == "video"
  .group
    = f.label :bookmark, "#{t(:video_link, :scope => "activerecord.attributes")}", :class => "label"
    = f.text_field :bookmark, :class => "text_field"
    .description
      = t("activerecord.attributes.video_link_description")

.group
  = f.label :tags, "#{t(:tags, :scope => "activerecord.attributes.item")}", :class => "label"
  = f.text_field :tags, :value => @item.tags.join(", "), :class => "text_field autocomplete_for_tags"
  .description
    = t(".tags_tip")

.group
  %label.label#rqlabel
    =t(".related_items", :default => :"items.show.related_items" )
  %ul.items#related_items

.group
  = f.label :body, t(:body, :scope => "activerecord.attributes.item"), :class => "label"
  -if current_group.wysiwyg_editor
    = f.text_area :body, :class => "text_area", :id => "wysiwyg_editor", :value => markdown(@item.body)
  -else
    = f.text_area :body, :class => "text_area", :id => "markdown_editor"

    #markdown_preview.markdown
      =markdown(@item.body)

-if current_group.language.nil? && AppConfig.enable_i18n
  .group
    = f.label :language, t(:language, :scope => "activerecord.attributes.item"), :class => "label"
    = language_select(f, @item)
    .description
      = t(".language_tip")
-else
  = f.hidden_field :language, :value => (current_group.language || AppConfig.default_language)

-if !@item.new?
  .group
    = f.label :version_message, t("wiki.model.attributes.message"), :class => "label"
    = f.text_field :version_message, :class => "text_field"


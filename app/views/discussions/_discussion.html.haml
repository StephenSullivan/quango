-title = h(discussion.title)
-if discussion.closed
  -title += " [#{t("closed", :scope => "activerecord.attributes.discussion").upcase}]"

-if !local_assigns[:mini]
  -owner = nil
  -if discussion.last_target.present?
    -last_target = discussion.last_target
    -if last_target.respond_to?(:updated_by) && last_target.updated_by.present?
      -owner= last_target.updated_by
    -else
      -owner= last_target.user
  -else
    -last_target = discussion
    -owner = discussion.user unless discussion.anonymous

  %li.entry.item{:class => class_for_discussion(discussion)}
    / discussion Stats
    =render :partial => "stats", :locals => {:discussion => discussion}
    / discussion Summary
    .summary
      .left.vote-icon
        -unless discussion.closed
          -if logged_in? && (vote = current_user.vote_on(discussion))
            -if vote.value < 0
              = image_tag "edit-delete.png"
            -else
              = image_tag "dialog-ok-apply.png"
          -elsif current_user != discussion.user
            -form_tag votes_path, :class => "vote-up-form" do
              .fields
                = hidden_field_tag "voteable_type", discussion.class.name, :id => "voteable_type_#{discussion.id}"
                = hidden_field_tag "voteable_id", discussion.id, :id =>  "voteable_id_#{discussion.id}"
                = hidden_field_tag "source", discussions_path, :id =>  "source_#{discussion.id}"
                = image_submit_tag("dialog-ok.png", :name=>"vote_up", :value=>"1", :title => t("votes.control.to_vote_up"), :class => "quick-vote-button")

      -cache("discussion_on_index_#{discussion.id}_#{I18n.locale}") do
        %h3= link_to title, discussion_path(discussion), :title => truncate(strip_tags(discussion.body), :length => 200)
        .tag-list
          -if discussion.tags.empty? && logged_in? && (current_user.can_modify?(@discussion) || current_user.can_retag_others_discussions_on?(current_group))
            %span.retag
              = link_to t('discussions.show.retag'), retag_discussion_path(discussion), :id => 'retag', :class => "important"
          -discussion.first_tags.each do |tag|
            %span.tag{:class => "tag_#{h(tag)}"}
              = link_to h(tag), url_for(:controller => "discussions", :action => "index", :tags => tag), :rel => "tag", :title => t("discussions.tags.tooltip", :tag => tag)

      .owner-data
        -if owner
          =render :partial => "users/user_mini", :locals => {:user => owner}
        -else
          =t("global.anonymous")
        %small.time_ago
          = link_to t("time.ago", :time => time_ago_in_words(last_target.updated_at)), discussion_path(discussion)+"##{last_target.id}"
        -if discussion.wiki
          %span.wiki_flag
            wiki
    .clear
-else
  -cache("mini_discussion_on_index_#{discussion.id}_#{I18n.locale}") do
    %li.item{:class => "#{class_for_discussion(discussion)} #{local_assigns[:lite] ? 'lite' : ''}"}
      .stats
        .box.answers{:class => discussion.accepted ? "accepted" : "" }
          .counter
            =format_number(discussion.answers_count)
          -if !local_assigns[:lite]
            .text
              =t(:answers, :scope => "activerecord.attributes.discussion")
      .summary
        %h3
          = link_to title, discussion_path(discussion)
      .clear

- is_mobile = params[:mobile]


-content_for :list do

  .container
    .dark-down.inset{:style=>"height:48px;line-height:48px;padding:0;margin:0;"}
      .light                              
        .subheading.left
          = "Clients"

        .subheading.right
          %span.right
            = link_to t(".newest", :default => :"items.index.newest"), groups_path(:tab=>"newest")
          %span.right
            = link_to t(".oldest", :default => :"items.index.oldest"), groups_path(:tab=>"oldest")
          %span.right
            = link_to t(".name", :default => :"items.index.name"), groups_path(:tab=>"name")




    - if current_group.group_type == "mobile"
      %ul.items#groups
        = render :partial => "group", :collection => @groups
    - else
      %ul.items#groups
        = render :partial => "group", :collection => @groups





- if is_mobile || current_group.group_type == "mobile"
  -content_for :main do

    .container
    
      = yield :list

    #additional_info
      =will_paginate @groups
      .clear



- if current_group.group_type != "mobile"
  -content_for :sidebar_inner do
    #sidebar-inner
      .block
        %h3
          = h("Search for a group")
        .content{:style => "background-color: gainsboro"}
          -form_tag groups_path, :class => "form", :id => "filter_groups", :method => "get" do
            = label_tag :q, t(".filter"), :class => "label"
            = text_field_tag "q", params[:q], :class => "text_field filter_field"
            = submit_tag("filter")
            .clear

      = render :partial => "top_groups"

      .block{:style => "display:none"}
        %h3
          = h("Something")
        .content
          = h("Something else")

  -content_for :sidebar do
    #sidebar
      -current_group.widgets.each do |widget|
        .widget.block{:id => widget.name}
          = render :partial => widget.partial_name, :locals => {:widget => widget, :width => "narrow"}

      .block{:style => "display:none"}
        %h3
          = h("Something")
        .content
          = h("Something else")


  -content_for :main do

    #main-index
    
      = yield :list





= "mode: " << @mode.to_s
= f.error_messages
= error_messages_for(:user)




.group
  = f.label :title, "#{t(:title, :scope => "activerecord.attributes.item")}*", :class => "label"
  = f.text_field :title, :class => "text_field"
  .description
    = current_group.item_prompt

-if @item.mode == "video"
  .group
    = f.label :bookmark, "#{t("videos.form.bookmark", :scope => "activerecord.attributes.item")}*", :class => "label"
    = f.text_field :bookmark, :class => "text_field"
    .description
      = t("videos.form.bookmark_prompt")

  .group
    = f.label :video_mode
    -Item::VIDEO_MODES.each do |video_mode|
      -if video_mode == @item.video_mode
        = f.radio_button :video_mode, video_mode, :class => "radio_button", :checked => true
        = f.label (:video_mode, video_mode)
      -else
        = f.radio_button :video_mode, video_mode, :class => "radio_button"
        = f.label (:video_mode, video_mode)
    .description
      = h("Please choose the video porvider")

.group
  = f.label :tags, "#{t(:tags, :scope => "activerecord.attributes.item")}", :class => "label"
  = f.text_field :tags, :value => @item.tags.join(", "), :class => "text_field autocomplete_for_tags"
  .description
    = t(".tags_tip")

-if @item.image_count == 0
  = "This item has no images, why not add one?"


-if @item.image_count > 0
  = "This item has images, why net edit the thumbnails or something"


-if @item.mode == "video"
  .group
    = f.label :main_image, t('main_image', :scope => "activerecord.attributes.video"), :class => "label"
    -unless @item.new?
      = image_tag(item_path(@item))
    %br
    = f.file_field :logo
    .description
      = t('.logo_legend')  

  %hr
  .thumbnail
    = image_tag(@item.main_thumbnail, :style => "width:104px")
  .group
    = f.label :main_thumbnail, "#{t("videos.form.thumbnail", :scope => "activerecord.attributes.item")}*", :class => "label"
    = f.text_field :main_thumbnail, :class => "text_field autocomplete_for-tags"
    .description
      = t("videos.form.thumbnail_prompt")



.group
  = f.label :body, t(:body, :scope => "activerecord.attributes.item"), :class => "label"
  -if current_group.wysiwyg_editor
    = f.text_area :body, :class => "text_area", :id => "wysiwyg_editor", :value => markdown(@item.body)
  -else
    = f.text_area :body, :class => "text_area", :id => "markdown_editor"

    #markdown_preview.markdown
      =markdown(@item.body)

-if current_group.language.nil? && AppConfig.enable_i18n
  .group
    = f.label :language, t(:language, :scope => "activerecord.attributes.item"), :class => "label"
    = language_select(f, @item)
    .description
      = t(".language_tip")
-else
  = f.hidden_field :language, :value => (current_group.language || AppConfig.default_language)

-if current_group.has_adult_content
  .group
    = f.check_box :adult_content, :class => "checkbox"
    = f.label :adult_content, t(".adult_content"), :class => "radio"

-if !@item.new?
  .group
    = f.label :version_message, t("wiki.model.attributes.message"), :class => "label"
    = f.text_field :version_message, :class => "text_field"
-elsif !logged_in?
  = render :partial => "users/anonymous_form"

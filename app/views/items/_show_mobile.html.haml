- is_mobile = params[:mobile]


-content_for :custom_javascript do

  = javascript_include_merged :show

- show_close_request_form = !@item.closed && logged_in? && @item.can_be_requested_to_close_by?(current_user)
- show_open_request_form = @item.closed && logged_in? && @item.can_be_requested_to_open_by?(current_user)

- if logged_in?
  - if current_user.mod_of?(current_group) && @item.closed
    -# show_close_request_form = (@item.close_reason.user == current_user.id)
    = "closed"
  - @flag = current_user.has_flagged?(@item) || Flag.new

- @flag ||= Flag.new

- if show_open_request_form
  - @open_request = current_user.has_requested_to_open?(@item) || OpenRequest.new

- if show_close_request_form
  - @close_request = @item.close_requests.detect{ |rq| rq.user_id == current_user.id } || CloseRequest.new(:reason => "dupe")

- item_body = find_and_preserve(shapado_auto_link(markdown(@item.body.present? ? @item.body : @item.title)))

- content_for :head do
  = render :partial => "meta_include", :locals => {:item => @item}

-# source = item_path(@doctype, @item)
= error_messages_for 'answer'


 
- content_for :main do


  #mobile-index{:style=>"margin:0 auto;padding:0"}
    .content{:style=>"width:512px;margin:0 auto;padding:0"}

      -if logged_in?
        -if current_user.owner_of?(current_group)
          %div
            = render :partial => "controls", :object=>@item


      #item-body-col.commentable.markdown{:style=>"width:480px;margin:0 16px"}
        %a{:name => @item.id}
        #body
          - if @item.closed && @item.close_reason
            #close_reason
              = t(".close_reason")
              = t(@item.close_reason.reason, :scope=>"close_requests.form")
              - if !@item.close_reason.comment.empty?
                .comment
                  =find_and_preserve(shapado_auto_link(@item.close_reason.comment))
          .debug{:style => "display:none"}
            = "This item's doctype: #{@item.doctype_id}"



          .entry{:style=>"float:left"}
            .entry-details
              %h1.entry-title
                = @item.title
                - if @item.closed
                  =" [#{t("closed", :scope => "activerecord.attributes.item").upcase}]"

              .entry-authors{:style => "border-bottom:1px solid gainsboro;"}
                = render :partial => "entry_authors"

              .tag-list
                - @item.tags.each do |tag|
                  %span.tag
                    = link_to h(tag), url_for(:controller => "item", :action => "index", :tags => tag), :rel => "tag", :style => "background-color:#{current_group.primary}"
                - if logged_in? && (current_user.can_modify?(@item) || current_user.can_retag_others_items_on?(current_group)) #tofix
                  .retag
                    = link_to t('.retag'), retag_item_path(@doctype, @item), :id => 'retag',:style => "background-color:white;border:0; color:#{current_group.primary};", :class => "link"

            -#if @item.description?
              -#.description
                -#= "description"

            .entry-content
              - if @item.doctype.has_links

                = "<span style='font-weight:bold;color:#{current_group.primary}'>#{@item.article_link_publisher}</span> reports;"

              = item_body
            .clear

            -if @item.article_link?
              .article_link
                = "Follow this link to read more..."
                %p            
                  = link_to "#{@item.title}",@item.article_link.to_s





            %a{:name=>"answers"}
            #answers
              -unless @item.closed
                %a{:name=>"to_answer"}
                -form_for @answer, :url => item_answers_path(@doctype, @item), :html => {:class => "form mainAnswerForm", :style=>"width:568px"} do |f|
                  = render :partial => "answers/form", :locals => {:f => f, :markdown => true, :mode => "item"}
                .clear


              .answers

                .entry-details
                  .entry-title
                    = h("What others think")
                .secondary-navigation
                  .navcontrols
                    %ul{:style=>"list-style-type:none"}
                      %li
                        = "Sort by: "
                      %li
                        = link_to "Fresh", item_path(@doctype, @item, :sort=>"fresh", :anchor => "answers"),:rel => "nofollow", :class => "standard-button"
                      %li
                        = link_to "Hot", item_path(@doctype, @item, :sort=>"hot", :anchor => "answers"),:rel => "nofollow", :class => "standard-button"
                      %li
                        = link_to "Historical", item_path(@doctype, @item, :sort=>"sweaty", :anchor => "answers"),:rel => "nofollow", :class => "standard-button"

              .clear

              .block
                - if @item.accepted
                  -solution = @item.answer
                  =render :partial=> "answer", :locals=> {:item => @item, :answer => solution} unless solution.nil?
                .hentry
                  -@answers.each do |answer|
                    =render :partial=> "answer", :locals=> {:item => @item, :answer => answer}
                =will_paginate(@answers)










-#content_for :sidebar do








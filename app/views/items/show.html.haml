-content_for :custom_javascript do

  = javascript_include_merged :show

- show_close_request_form = !@item.closed && logged_in? && @item.can_be_requested_to_close_by?(current_user)
- show_open_request_form = @item.closed && logged_in? && @item.can_be_requested_to_open_by?(current_user)

- if logged_in?
  - if current_user.mod_of?(current_group) && @item.closed
    -# show_close_request_form = (@item.close_reason.user == current_user.id)
    = "closed"
  - @flag = current_user.has_flagged?(@item) || Flag.new

- @flag ||= Flag.new

- if show_open_request_form
  - @open_request = current_user.has_requested_to_open?(@item) || OpenRequest.new

- if show_close_request_form
  - @close_request = @item.close_requests.detect{ |rq| rq.user_id == current_user.id } || CloseRequest.new(:reason => "dupe")

- item_body = find_and_preserve(shapado_auto_link(markdown(@item.body.present? ? @item.body : @item.title)))

- content_for :head do
  = render :partial => "meta_include", :locals => {:item => @item}

- source = item_path(@doctype, @item)
= error_messages_for 'answer'


 
- content_for :main do

  %div
    = "&nbsp;"

  -#if current_group.has_leaderboard && !@doctype.product_format?

    -#lead{:style=>"margin:10px 0; height:90px"}
      -#.welcome-index{:style => "float:left; width:729px;"}
        -#.content
          -#.inner
            -#.leaderboard{:style=>"width:728px;height:90px; float:left;"}
              -#= "<!--/ Leaderboard /-->"
              -#= current_group.leaderboard_content
      -#.sidebar-inner{:style => "float:right; width:300px;"}
        -#.block
          -#%div{:style=>"width:300px;height:90px;background:black"}
            -#- if current_group.has_bumper
              -#= current_group.bumper_content
      -#.clear

  .sidebar-inner{:style=>"float:left;width:140px;"}
    .sidebar-headings{:style=>"width:136px; line-height:32px;padding-left:4px;"}
      = "Member"
    = render :partial => "author", :locals => {:width => "narrow"}


    - if @answers.count > 0
      = render :partial => "participants", :locals=> {:item => @item}



    -#= render :partial => "shared/current_tags"
    -#= render :partial => "shared/tag_list", :object => @tag_cloud
    -#= render :partial => "shared/community_sponsor", :locals => {:width => "narrow"}
    -#= render :partial => "related_communities"


    - if logged_in? && (current_user.mod_of?(current_group) || current_user.can_view_offensive_counts_on?(current_group))
      -unless @item.flags.count == 0
        .block
          %h3
            = t(:flags, :scope => "activerecord.models")
          .content
            = render :partial => "flags/list", :locals => {:flaggeable => @item}

      -unless @item.close_requests.size == 0
        .block
          %h3
            = t(:prural_name, :scope => "close_requests.model")
          .content
            = render :partial => "close_requests/list", :locals => {:item => @item}

      -unless @item.open_requests.size == 0
        .block
          %h3
            = t(:prural_name, :scope => "open_requests.model")
          .content
            = render :partial => "open_requests/list", :locals => {:item => @item}

    - if @item.badges.size > 0
      .block
        %h3
          = t('badges', :scope => "activerecord.models")
        .content
          %ul.list
            -@item.badges.each do |badge|
              %li
                = render :partial => "badges/badge", :object => badge, :locals => {:hide_user => false}



  #sidebar-inner{:style=>"float:right"}
    -#= render :partial => "author"
    -if !@doctype.product_format || !@doctype.has_video
      = render :partial => "default_image", :locals => {:item => @item}
    -if @doctype.has_video?
      = render :partial => "video_info", :locals => {:item => @item}
    = render :partial => "images", :locals => {:item => @item}



    -current_group.widgets.each do |widget|
      .widget.block{:id => widget.name}
        = render :partial => widget.partial_name, :locals => {:widget => widget, :width=> "wide"}
      .clear
    .clear


    -#= render :partial => "shared/sidebar_actions_show",  :locals => {:width => "wide"}
    = render :partial => "shared/community_sponsor",  :locals => {:width => "wide"}
    -#if current_group.has_medium_rectangle
      -#.medium-rectangle{:style=>"background-color:white; width:300px;height:250px;margin:10px 0; padding:2px 0; border-bottom:2px solid gainsboro; border-top:2px solid gainsboro"}
        -#= current_group.medium_rectangle_content
      -#.clear

    = render :partial => "shared/sponsored_links",  :locals => {:width => "wide"}

    -#if current_group.has_threeone_rectangle
      -#.threeone-rectangle{:style=>"background-color:white; width:300px;height:100px;margin:10px 0; padding:2px 0; border-bottom:2px solid gainsboro; border-top:2px solid gainsboro"}
        -#= current_group.threeone_rectangle_content
      -#.clear
    -#.block{:style => "margin-bottom:4px"}
      -#%h3{:style=>"background:#{current_group.primary_dark}"}
        -#= "About this site"
      -#.content
        -#.markdown{:style => "padding:10px"}
          -#= markdown(current_group.description)

    -related_items = Item.related_items(@item, :language => find_languages)
    - if related_items
      .block{:style=>"display:none;"}
        %h3
          =t(".related_items")
        .content
          -#%ul.list
            -#-related_items.each do |rq|
              -#%li
                -#= link_to h(rq.title), items_path(rq.doctype, rq.slug.to_s), :title => truncate(strip_tags(rq.body), :length => 200)

    -if !current_group.isolate
      -#= render :partial => "related_communities"

    -if logged_in? && current_group.has_bunnies?
      -if current_user.owner_of?(current_group)
        = render :partial => "bunnies", :locals => {:item => @item}


    -if !current_group.has_leaderboard
      = render :partial => "shared/signup_button",  :locals => {:width => "wide"}
    = render :partial => "shared/share_box", :locals => {:item => @item}




  -if @doctype.product_format?
    = render :partial => "show_product", :object=>@item




  -#show-container{:style=>"width:728px;"}
  #main-index{:style=>"float:right; margin:0 8px"}
    .content
      .inner
        .toolbox{:style=>"border-bottom:4px solid #b6b6b6"}
          = render :partial => "toolbox"
        -if logged_in?
          -if current_user.owner_of?(current_group) | current_user.mod_of?(current_group)
            %div
              = render :partial => "controls", :object=>@item

    -if @doctype.has_video?
      = render :partial => "show_video", :object=>@item


    #item-body-col.commentable.markdown
      %a{:name => @item.id}
      #body
        - if @item.closed && @item.close_reason
          #close_reason
            = t(".close_reason")
            = t(@item.close_reason.reason, :scope=>"close_requests.form")
            - if !@item.close_reason.comment.empty?
              .comment
                =find_and_preserve(shapado_auto_link(@item.close_reason.comment))
        .debug{:style => "display:none"}
          = "This item's doctype: #{@item.doctype_id}"



        .entry{:style=>"float:left"}
          .entry-details
            %h1.entry-title
              = @item.title
              - if @item.closed
                =" [#{t("closed", :scope => "activerecord.attributes.item").upcase}]"

            .entry-authors{:style => "border-bottom:1px solid gainsboro;"}
              = render :partial => "entry_authors"

            .tag-list
              - @item.tags.each do |tag|
                %span.tag
                  = link_to h(tag), url_for(:controller => "item", :action => "index", :tags => tag), :rel => "tag", :style => "background-color:#{current_group.primary}"
              - if logged_in? && (current_user.can_modify?(@item) || current_user.can_retag_others_items_on?(current_group)) #tofix
                .retag
                  = link_to t('.retag'), retag_item_path(@doctype, @item), :id => 'retag',:style => "background-color:white;border:0; color:#{current_group.primary};", :class => "link"

          -#if @item.description?
            -#.description
              -#= "description"

          .entry-content
            - if @item.article_link
              - if @item.article_link_author?
                = "<b>#{@item.article_link_author}</b> writes for #{@item.article_link_publisher};"
              - else
                = "<span style='font-weight:bold;color:#{current_group.primary}'>#{@item.article_link_publisher}</span> reports;"

            = item_body
          .clear

          -if @item.article_link?
            .article_link
              = "Read the full article..."
              %p            
                = link_to "#{@item.title}",@item.article_link.to_s





          %a{:name=>"answers"}
          #answers
            -unless @item.closed
              %a{:name=>"to_answer"}
              -form_for @answer, :url => item_answers_path(@doctype, @item), :html => {:class => "form mainAnswerForm"} do |f|
                = render :partial => "answers/form", :locals => {:f => f, :markdown => true, :mode => "item"}
              .clear


            .answers

              .entry-details
                .entry-title
                  = h("What others think")
              .secondary-navigation
                .navcontrols
                  %ul{:style=>"list-style-type:none"}
                    %li
                      = "Sort by: "
                    %li
                      = link_to "Fresh", item_path(@doctype, @item, :sort=>"fresh", :anchor => "answers"),:rel => "nofollow", :class => "standard-button"
                    %li
                      = link_to "Hot", item_path(@doctype, @item, :sort=>"hot", :anchor => "answers"),:rel => "nofollow", :class => "standard-button"
                    %li
                      = link_to "Historical", item_path(@doctype, @item, :sort=>"sweaty", :anchor => "answers"),:rel => "nofollow", :class => "standard-button"

            .clear

            .block
              - if @item.accepted
                -solution = @item.answer
                =render :partial=> "answer", :locals=> {:item => @item, :answer => solution} unless solution.nil?
              .hentry
                -@answers.each do |answer|
                  =render :partial=> "answer", :locals=> {:item => @item, :answer => answer}
              =will_paginate(@answers)










-#content_for :sidebar do








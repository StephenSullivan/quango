-@item = Item.new
-form_for(@item, :url => items_url, :html=>{:class => "form", :id => "ask_item"}) do |f|
  -# TODO: refactor this
  -lang = logged_in? ? current_user.main_language : nil
  -lang = current_group.language ? current_group.language : lang

  %h3
    %label.label
      =current_group.item_prompt || t(".quick_item")
  .columns
    .column_info
      -if logged_in?
        -reputation = current_user.reputation_on(current_group)
        .avatar
          = gravatar(current_user.email.to_s, :size => 64)
        .reputation{:class => class_for_number(reputation)}
          = format_number(reputation)
      -else
        .avatar
          = gravatar("", :size => 64)
    .column_form
      .group
        .pointer
        =f.text_area :title, :class => "text_area", :id => "item_title"

      #tags{:style => "width: 100%"}
        %span#qqsubmit{:style => "width: 20%; float: right"}
          =f.submit t(".ask_item", :default => :"layouts.application.ask_item"), :class => "ask_item"

        -if lang
          = f.hidden_field :language, :value => lang
        -else
          %span.group{:style => "width: 20%"}
            = language_select(f, @item)
        %span.group.as-inline{:style => "width: 50%"}
          =f.text_field :tags, :class => "text_field autocomplete_for_tags"
        -if lang
          %span{:style => "width: 20%"}
      .clear
  .clear

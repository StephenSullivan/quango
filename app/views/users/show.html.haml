- content_for :head do
  %meta{:name => "keywords", :content => "member"}
  %meta{:name => "description", :content => @user.bio }
  %link{:rel => "canonical", :href => user_path(@user) }

-content_for :mast do
  .profile-title
    .icon.left
      = gravatar(@user.email.to_s, :size => 36)
    = @user.login.capitalize
    = render :partial => "follow_button", :object => @user
  .clear

-content_for :show_user do

  .secondary-navigation{:class => @q_sort||"votes", :style => "background-color:"+current_group.secondary+";"}
    .navtitle
      %span.counter
        = number_with_delimiter(@favorites.total_entries)
      =t(:items, :scope => "activerecord.models")
    .navcontrols
      %ul
        %li.newest
          = link_to t("items.index.newest"), user_path(@user, params.merge(:q_sort=>"newest")), :rel => "nofollow", :class => "button"
        %li.oldest
          = link_to t("items.index.oldest"), user_path(@user, params.merge(:q_sort=>"oldest")), :rel => "nofollow", :class => "button"
        %li.views
          = link_to t("activerecord.attributes.item.views"), user_path(@user, params.merge(:q_sort=>"views")), :rel => "nofollow", :class => "button"
        %li.votes
          = link_to t("items.index.votes"), user_path(@user, params.merge(:q_sort=>"votes")), :rel => "nofollow", :class => "button"
    .clear
  .block
    %ul.items#items
      -@items.each do |item|
        = render :partial => "items/item", :object => item
    .additional_info
      = will_paginate @items, :param_name => "items_page"
      .clear

  /Favorites
  .secondary-navigation{:class => @f_sort||"votes"}
    .navtitle
      %span.counter
        = number_with_delimiter(@favorites.total_entries)
      =t(:favorites, :scope => "activerecord.models")
    %ul
      %li.newest
        = link_to t("items.index.newest"), user_path(@user, params.merge(:f_sort=>"newest")), :rel => "nofollow"
      %li.oldest
        = link_to t("items.index.oldest"), user_path(@user, params.merge(:f_sort=>"oldest")), :rel => "nofollow"
      %li.views
        = link_to t("activerecord.attributes.item.views"), user_path(@user, params.merge(:f_sort=>"views")), :rel => "nofollow"
      %li.votes
        = link_to t("items.index.votes"), user_path(@user, params.merge(:f_sort=>"votes")), :rel => "nofollow"
    .clear
  .block

  %ul.items#items
    -@favorite_items.each do |item|
      = render :partial => "items/item", :object => item
  .additional_info
    = will_paginate @favorites, :param_name => "favorites_page"
    .clear

  / Answers
  .secondary-navigation{:class => @a_sort||"votes"}
    .navtitle
      %span.counter
        = number_with_delimiter(@answers.total_entries)
      =t(:answers, :scope => "activerecord.models")

    %ul
      %li.newest
        = link_to t("items.index.newest"), user_path(@user, params.merge(:a_sort=>"newest")), :rel => "nofollow"
      %li.oldest
        = link_to t("items.index.oldest"), user_path(@user, params.merge(:a_sort=>"oldest")), :rel => "nofollow"
      %li.votes
        = link_to t("items.index.votes"), user_path(@user, params.merge(:a_sort=>"votes")), :rel => "nofollow"
    .clear
  .block

    %ul.items#answers
      -@answers.each do |answer|
        -next if answer.item.banned
        = render :partial => "answers/answer", :object => answer
    .additional_info
      = will_paginate @answers, :param_name => "answers_page"
      .clear


-content_for :sidebar do
  #sidebar
    = render :partial => "profile_achievements", :object => @user
    = render :partial => "profile_statistics", :object => @user

-content_for :sidebar_inner do
  #sidebar-inner
 
    .block
      %h3
        = "Profile image"
        -if current_user == @user
          .navcontrols
            =link_to t("users.manage.edit"), settings_path(:tab => "image"), :class => "button", :style => "float:right"
      .content
        = gravatar @user.email.to_s, :size => 234

    - if !@user.hide_country
      .block
        %h3
          = "location"
        .content
          %span.adr
            %span.country-name
              = t("global.from", :site => @user.country_name)
              = country_flag(@user.country_code, @user.country_name)
    .block
      %h3
        = "info"
      .content
        = markdown(@user.bio)

    .block
      %h3
        = "Followers"
      .content
        -if @user.followers.count > 0
          .counter
            = number_with_delimiter(@user.followers.count)
            Followers
          .friend_list
            -@user.followers.each do |follower|
              %span
                =link_to gravatar(follower.email.to_s, :size => 24), user_path(follower)

    .block
      %h3
        = "Following"
      .content
        -if current_user = @user
          -if @user.following.count > 0
            .counter
              = number_with_delimiter(@user.following.count)
              Following
            .friend_list
              -@user.following.each do |follower|
                %span
                  = link_to gravatar(follower.email.to_s, :size => 24), user_path(follower)



- content_for :main do
  #main-index
    .content
      .inner
        = yield :mast
        = yield :show_user




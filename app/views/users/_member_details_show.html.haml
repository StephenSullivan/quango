-bronze, silver, gold = user.badges_count_on(current_group)

.member_details{:style=>"width:256px; overflow:hidden"}

  %div.gravatar{:style=>"width:80px;float:left; "}
    - @avatar = Avatar.find(user.profile_image)
    - if @avatar.present?
      - cropped_avatar = @avatar.avatar.process(:thumb,@avatar.avatar_cropping)
      - profile_image = cropped_avatar.process(:thumb,"80x80").url
      = image_tag profile_image, :height => "80px",:width => "80px"
    - else
      = image_tag "/images/anonymous_avatar.png", :height => "80px",:width => "80px"

  %div.details{:style=>"padding-left:13px;width:114px;float:left; overflow:hidden"}

    %span.fn.nickname
      -unless user.nil?
        -if user.name.present?
          = link_to h(user.name), user_path(user), :class => "user-link"
          ="aka " 
          = link_to h(user.login), user_path(user), :class => "user-link"
        -else
          =link_to h(user.login), user_path(user), :class => "user-link"
    .clear


    %span.reputation{:title => t("activerecord.attributes.user.reputation")}
      -unless user.nil?
        -if user.owner_of?(current_group)
          %span.ownerflair{:title => "Group Administrator", :style => "background-color:#{current_group.secondary};border: 1px solid #{current_group.secondary};text-shadow: #{current_group.secondary} 0px -1px 1px"}
            Admin
        -elsif user.mod_of?(current_group)
          %span.modflair{:title => "moderator"}
            Associate
        -elsif user.editor_of?(current_group)
          %span.editorflair{:title => "Group Editor", :style => "background-color:#{current_group.secondary};border: 1px solid #{current_group.secondary};text-shadow: #{current_group.secondary} 0px -1px 1px"}
            Editor

      -else
        = t('users.deleted')
      -unless user.nil?
        %span.label
          =user.reputation_on(current_group)

    -if local_assigns[:with_badges] != false
      -if gold.to_i > 0
        %span{:title => "#{gold} gold badges"}
          %span.badgeicon
            = image_tag("/images/icons/badge_gold.png")
          %span.badgecount
            =gold

      -if silver.to_i > 0
        %span{:title => "#{silver} silver badges"}
          %span.badgeicon
            = image_tag("/images/icons/badge_silver.png")
          %span.badgecount
            =silver

      -if bronze.to_i > 0
        %span{:title => "#{bronze} bronze badges"}
          %span.badgeicon
            = image_tag("/images/icons/badge_bronze.png")
          %span.badgecount
            =bronze

      .clear
      %span.time_ago.published{:title => @item.created_at, :class => "relativetime"}
        = t("time.ago", :time => time_ago_in_words(@item.created_at))
        - if @item.wiki
          .wiki_flag
            wiki
      .clear
      %span.adr
        - if !@item.user.hide_country
          %span.country-name
            = t("global.from", :site => @item.user.country_name)
            = country_flag(@item.user.country_code, @item.user.country_name)

.clear

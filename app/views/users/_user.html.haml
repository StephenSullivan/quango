%li{:onclick => "document.location.href='#{user_path(user)}'"}
  .member-profile-list
    .profile-image{:style => "height:64px; width:64px;"}
      - @avatar = Avatar.find(user.profile_image)
      - if @avatar.present?
        - cropped_avatar = @avatar.avatar.process(:thumb,@avatar.avatar_cropping)
        - profile_image = cropped_avatar.process(:thumb,"64x64").url
        = image_tag profile_image 
      - else
        = image_tag "/images/anonymous_avatar.png", :style => "height:64px; width:64px;"

    .summary.left
      %h3{:style => "margin: 0px"}
        = link_to h("#{user.first_name} #{user.last_name}"), user_path(user)
        -#- if current_user.owner_of?(current_group)
          -#%span{:style => "color:red; font-size:8px"}
            -#= user.email
      .badges
        -user.badges_on(current_group, :limit => 3).each do |badge|
          =render :partial => "badges/badge", :object => badge, :locals => {:mini => true}

      -# TODO: Scope this, need to get the last updated posts and comments
      .latest-thought{:style => "width:468px"}

        = "Latest Post:"
        -# item = user.items.last_updated

        -if !user.items   

          - user.items.each do |item|
            = link_to item.title, item_path(item.doctype, item), :title => truncate(strip_tags(item.body), :length => 200)
            = " in " << "#{item.doctype}"

      .latest-comment
        = "Latest Comment:"

        -if !user.answers

          - user.answers[0..0].each do |answer|
            = link_to "#{answer.item.title}", "/#{answer.item.section}/" << answer.item.slug
            = " in " << "#{answer.item.section}"



    .profile_box.right{:style => "display:none"}
      -#= render :partial => "member_details_inner", :locals => {:user => user}

      .stats.left
        .box.votes
          -count = user.items.count(:group_id => current_group.id)
          .counter{:class => class_for_number(count) }
            =format_number(count)
          .text
            = "Posts"
        .box.answers
          -count = user.answers.count(:group_id => current_group.id)
          .counter{:class => class_for_number(count) }
            =format_number(count)
          .text
            = "Comments"




  .clear

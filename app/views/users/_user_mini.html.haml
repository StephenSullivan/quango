-bronze, silver, gold = user.badges_count_on(current_group)

-if width == "wide"
  .user_mini{:style=>"width:300px; height:140px; overflow:hidden"}
    %div{:style=>"float:left; overflow:hidden"}
      - @avatar = Avatar.find(user.default_avatar)
      - if @avatar.present?
        - cropped_avatar = @avatar.avatar.process(:thumb,@avatar.avatar_cropping)
        - default_avatar = cropped_avatar.process(:thumb,"140x140")
        - default_avatar_grey = default_avatar.process(:greyscale,"20")
        -#= image_tag default_avatar.url, :class => 'b', :alt => user.first_name, :title => user.first_name
        = image_tag default_avatar_grey.url, :class => 'a', :alt => user.first_name, :title => user.first_name, :height => "140px", :width => "140px" 
      - else
        = image_tag "/images/anonymous_avatar.png", :height => "140px", :width => "140px" #, user_path(user)
    %div.details{:style=>"float:left; overflow:hidden"}

      %span.fn.nickname
        -unless user.nil?
          =link_to h(user.first_name.to_s + " " + user.last_name.to_s), user_path(user), :class => "user-link"
      .clear


      %span.reputation{:title => t("activerecord.attributes.user.reputation")}
        -unless user.nil?
          -if user.owner_of?(current_group)
            %span.ownerflair{:title => "Group Administrator", :style => "background-color:#{current_group.secondary};border: 1px solid #{current_group.secondary};text-shadow: #{current_group.secondary} 0px -1px 1px"}
              Admin
          -elsif user.mod_of?(current_group)
            %span.modflair{:title => "moderator"}
              Associate
          -elsif user.editor_of?(current_group)
            %span.editorflair{:title => "Group Editor", :style => "background-color:#{current_group.secondary};border: 1px solid #{current_group.secondary};text-shadow: #{current_group.secondary} 0px -1px 1px"}
              Editor

        -else
          = t('users.deleted')
        -unless user.nil?
          %span.label
            =user.reputation_on(current_group)

      -if local_assigns[:with_badges] != false
        -if gold.to_i > 0
          %span{:title => "#{gold} gold badges"}
            %span.gold.badgeicon-small
            %span.badgecount
              =gold

        -if silver.to_i > 0
          %span{:title => "#{silver} silver badges"}
            %span.silver.badgeicon-small
            %span.badgecount
              =silver

        -if bronze.to_i > 0
          %span{:title => "#{bronze} bronze badges"}
            %span.bronze.badgeicon-small
            %span.badgecount
              =bronze


-if width == "narrow"
  .user_mini{:style=>"width:140px; overflow:hidden"}
    %div.avatar-narrow
      - @avatar = Avatar.find(user.default_avatar)
      - if @avatar.present?
        - cropped_avatar = @avatar.avatar.process(:thumb,@avatar.avatar_cropping)
        - default_avatar = cropped_avatar.process(:thumb,"32x32")
        - default_avatar_grey = default_avatar.process(:greyscale,"20")

        -#= image_tag default_avatar.url, :class => 'b', :alt => user.first_name, :title => user.first_name
        = image_tag default_avatar_grey.url, :class => 'a', :alt => user.first_name, :title => user.first_name, :height => "32px", :width => "32px" 

      - else
        = image_tag "/images/anonymous_avatar.png", :height => "32px", :width => "32px" #, user_path(user)

    %div.details{:style=>"width:92px;float:left; overflow:hidden"}

      %span.fn.nickname
        -unless user.nil?
          =link_to h(user.first_name.to_s + " " + user.last_name.to_s), user_path(user), :class => "user-link"
      .clear


      %span.reputation{:title => t("activerecord.attributes.user.reputation")}
        -unless user.nil?
          -if user.owner_of?(current_group)
            %span.ownerflair{:title => "Group Administrator", :style => "background-color:#{current_group.secondary};border: 1px solid #{current_group.secondary};text-shadow: #{current_group.secondary} 0px -1px 1px"}
              Admin
          -elsif user.mod_of?(current_group)
            %span.modflair{:title => "moderator"}
              Associate
          -elsif user.editor_of?(current_group)
            %span.editorflair{:title => "Group Editor", :style => "background-color:#{current_group.secondary};border: 1px solid #{current_group.secondary};text-shadow: #{current_group.secondary} 0px -1px 1px"}
              Editor

        -else
          = t('users.deleted')
        -unless user.nil?
          %span.label
            =user.reputation_on(current_group)

      -if local_assigns[:with_badges] != false
        -if gold.to_i > 0
          %span{:title => "#{gold} gold badges"}
            %span.gold.badgeicon-small
            %span.badgecount
              =gold

        -if silver.to_i > 0
          %span{:title => "#{silver} silver badges"}
            %span.silver.badgeicon-small
            %span.badgecount
              =silver

        -if bronze.to_i > 0
          %span{:title => "#{bronze} bronze badges"}
            %span.bronze.badgeicon-small
            %span.badgecount
              =bronze
.clear

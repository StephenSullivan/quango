-bronze, silver, gold = user.badges_count_on(current_group)

-if width == "follower"

  - @avatar = Avatar.find(user.default_avatar)
  - if @avatar.present?
    - cropped_avatar = @avatar.avatar.process(:thumb,@avatar.avatar_cropping)
    - default_avatar = cropped_avatar.process(:thumb,"32x32")
    - default_avatar_grey = default_avatar.process(:greyscale)
 
    %div{:style=>"float:left;display:inline; border:1px solid gainsboro; margin:1px"}
      .thumb{:style=>"background-image:url(\"#{default_avatar_grey.url}\");height:32px; width:32px;"}
        %a{:href=>"#{user_path(user)}"}
          = image_tag "/images/spacer.gif", :height => "32px", :width => "32px", :border=>"0"

  - else
    %div{:style=>"float:left;display:inline; border:1px solid gainsboro; margin:1px"}
      .thumb{:style=>"height:32px; width:32px;"}
        %a{:href=>"#{user_path(user)}"}
          = image_tag "/images/anonymous_avatar.png", :height => "32px", :width => "32px", :border=>"0"




-if width == "wide"
  .user_mini{:style=>"width:300px; height:64px;border-bottom:1px solid white;overflow:hidden"}
    %div{:style=>"float:left; overflow:hidden;height:68px; width:68px;"}
      - @avatar = Avatar.find(user.default_avatar)
      - if @avatar.present?
        - cropped_avatar = @avatar.avatar.process(:thumb,@avatar.avatar_cropping)
        - default_avatar = cropped_avatar.process(:thumb,"64x64")
        - default_avatar_grey = default_avatar.process(:greyscale)
        -#= image_tag default_avatar.url, :class => 'b', :alt => user.first_name, :title => user.first_name
        = image_tag default_avatar_grey.url, :class => 'a', :alt => user.first_name, :title => user.first_name, :height => "64px", :width => "64px", :style => "border:2px solid white" 
      - else
        = image_tag "/images/anonymous_avatar.png", :height => "64px", :width => "64px", :style => "border:2px solid white"


    %div{:style=>"height:64px"}

      %div.details{:style=>"float:left; overflow:hidden"}

        %div.fn.nickname
          -unless user.nil?
            =link_to "#{user.display_name}", "/members/#{user.slug}", :style => "font-weight:bold, color:#{current_group.primary};"

          %span.reputation{:title => t("activerecord.attributes.user.reputation")}
            -unless user.nil?
              -#if user.owner_of?(current_group)
                -#%span.ownerflair{:title => "Group Administrator", :style => "margin-top:2px;float:right;"}
                  -#= "<img src='/images/owner-icon.png' height='12px' width='14px' title='Site Administrator' alt='Site Administrator'/>"
              -if user.mod_of?(current_group)
                %span{:title => "moderator",:style=>"color:gainsboro"}
                  ed.
              -elsif user.editor_of?(current_group)
                %span.editorflair{:title => "Group Editor", :style => "background-color:#{current_group.secondary};border: 1px solid #{current_group.secondary};text-shadow: #{current_group.secondary} 0px -1px 1px"}
                  ed.

            -else
              = t('users.deleted')
            -unless user.nil?
              %span.reputation
                =user.reputation_on(current_group)

          -if local_assigns[:with_badges] != false
            -if gold.to_i > 0
              %span{:title => "#{gold} gold badges"}
                %span.gold.badgeicon-small
                %span.badgecount
                  =gold

            -if silver.to_i > 0
              %span{:title => "#{silver} silver badges"}
                %span.silver.badgeicon-small
                %span.badgecount
                  =silver

            -if bronze.to_i > 0
              %span{:title => "#{bronze} bronze badges"}
                %span.bronze.badgeicon-small
                %span.badgecount
                  =bronze


      = render :partial => "users/user_latest", :locals => {:user => user}




  .clear


-if width == "narrow"
  .user_mini{:style=>"width:140px;height:50px; overflow:hidden"}
    %div.avatar-narrow
      - @avatar = Avatar.find(user.default_avatar)
      - if @avatar.present?
        - cropped_avatar = @avatar.avatar.process(:thumb,@avatar.avatar_cropping)
        - default_avatar = cropped_avatar.process(:thumb,"32x32")
        - default_avatar_grey = default_avatar.process(:greyscale)

        -#= image_tag default_avatar.url, :class => 'b', :alt => user.first_name, :title => user.first_name
        = image_tag default_avatar_grey.url, :class => 'a', :alt => user.first_name, :title => user.first_name, :height => "32px", :width => "32px" 

      - else
        = image_tag "/images/anonymous_avatar.png", :height => "32px", :width => "32px" #, user_path(user)

    %div.details{:style=>"width:92px;float:left; overflow:hidden"}

      %div.fn.nickname
        -unless user.nil?
          =link_to "#{user.display_name}", "/members/#{user.slug}", :style => "font-weight:bold"


      %span.reputation{:title => t("activerecord.attributes.user.reputation")}
        -unless user.nil?
          -if user.owner_of?(current_group)
            %span.ownerflair{:title => "Group Administrator", :style => "background-color:#{current_group.secondary};border: 1px solid #{current_group.secondary};text-shadow: #{current_group.secondary} 0px -1px 1px"}
              Admin
          -elsif user.mod_of?(current_group)
            %div.modflair{:title => "moderator"}
              Editor
          -elsif user.editor_of?(current_group)
            %span.editorflair{:title => "Group Editor", :style => "background-color:#{current_group.secondary};border: 1px solid #{current_group.secondary};text-shadow: #{current_group.secondary} 0px -1px 1px"}
              Editor

        -else
          = t('users.deleted')
        -unless user.nil?
          %span.label
            =user.reputation_on(current_group)

      -if local_assigns[:with_badges] != false
        -if gold.to_i > 0
          %span{:title => "#{gold} gold badges"}
            %span.gold.badgeicon-small
            %span.badgecount
              =gold

        -if silver.to_i > 0
          %span{:title => "#{silver} silver badges"}
            %span.silver.badgeicon-small
            %span.badgecount
              =silver

        -if bronze.to_i > 0
          %span{:title => "#{bronze} bronze badges"}
            %span.bronze.badgeicon-small
            %span.badgecount
              =bronze
  .clear


-if width == "square"
  .user_mini{:style=>"width:140px;height:200px; overflow:hidden"}
    .profile-image
      - @avatar = Avatar.find(user.default_avatar)
      - if @avatar.present?
        - cropped_avatar = @avatar.avatar.process(:thumb,@avatar.avatar_cropping)
        - default_avatar = cropped_avatar.process(:thumb,"140x140")
        - default_avatar_grey = default_avatar.process(:greyscale)

        -#= image_tag default_avatar.url, :class => 'b', :alt => user.first_name, :title => user.first_name
        = image_tag default_avatar_grey.url, :class => 'a', :alt => user.first_name, :title => user.first_name, :height => "140px", :width => "140px" 

      - else
        = image_tag "/images/anonymous_avatar.png", :height => "140px", :width => "140px" #, user_path(user)

    .clear

    .details{:style=>"width:140px; overflow:hidden"}

      %div.fn.nickname
        -unless user.nil?
          =link_to "#{user.display_name}", user_path(user)


      .action{:style=>"margin-top:10px;"}
        = render :partial => "users/follow_button", :locals => {:user => user, :width => "narrow"}

      %span.reputation{:title => t("activerecord.attributes.user.reputation")}
        -unless user.nil?
          -if user.owner_of?(current_group)
            %span.ownerflair{:title => "Group Administrator", :style => "background-color:#{current_group.secondary};border: 1px solid #{current_group.secondary};text-shadow: #{current_group.secondary} 0px -1px 1px"}
              Admin
          -elsif user.mod_of?(current_group)
            %div.modflair{:title => "moderator"}
              Editor
          -elsif user.editor_of?(current_group)
            %span.editorflair{:title => "Group Editor", :style => "background-color:#{current_group.secondary};border: 1px solid #{current_group.secondary};text-shadow: #{current_group.secondary} 0px -1px 1px"}
              Editor

        -else
          = t('users.deleted')
        -unless user.nil?
          %span.label
            =user.reputation_on(current_group)

      -if local_assigns[:with_badges] != false
        -if gold.to_i > 0
          %span{:title => "#{gold} gold badges"}
            %span.gold.badgeicon-small
            %span.badgecount
              =gold

        -if silver.to_i > 0
          %span{:title => "#{silver} silver badges"}
            %span.silver.badgeicon-small
            %span.badgecount
              =silver

        -if bronze.to_i > 0
          %span{:title => "#{bronze} bronze badges"}
            %span.bronze.badgeicon-small
            %span.badgecount
              =bronze
  .clear





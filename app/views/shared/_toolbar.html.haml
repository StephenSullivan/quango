#toolbar{:style => "float:left;width:160px; border-right:1px solid #{current_group.primary};"}
  -if logged_in?
    -if !current_group.isolate && AppConfig.enable_groups
      .edition
        %ul.topbar.combobox.left
          %li
            =image_tag(favicon_group_path(current_group), :style => "")
            =link_to h(current_group.name), domain_url(:custom => current_group.domain)
            -if current_group.name_highlight?
              =link_to h(current_group.name_highlight), domain_url(:custom => current_group.domain)
            %ul
              -current_user.groups(:select => [:name, :domain]).each do |group|
                %li
                  -if group.has_custom_favicon?
                    = image_tag(favicon_group_path(group), :style => "")
                  -else
                    = image_tag("/favicon.ico", :style => "")
                  =link_to h(group.name), domain_url(:custom => group.domain)

  -else
    .edition
      =link_to h(current_group.name), domain_url(:custom => current_group.domain)

#toolbar.date{:style => "float:left;width:auto;"}
  =Date.today.strftime("%a, %d %B")


#toolbar{:style => "float:right;width:auto;"}
  -if logged_in?
    -if current_user.owner_of?(current_group)
      .entry
        =link_to "&#x2620;", manage_properties_path, :class => "manage_link", :style => "font-size:1.5em;"
        |
    -if current_user.mod_of?(current_group)
      .entry
        =link_to t("layouts.application.moderate"), moderate_path, :class => "moderate_link"
        |
    .entry
      = gravatar(current_user.email.to_s, :size => 18)
      %strong= link_to(h(current_user.login), user_path(current_user))
      %span.reputation{:title => t("activerecord.attributes.user.reputation"), :style => "background-color:"+current_group.primary+""}=format_number(current_user.reputation_on(current_group))
      |
    .entry
      =link_to h("My Edition"), user_path(current_user)
      | 
    .entry
      =link_to h("My Profile"), user_path(current_user)
      | 
    .entry
      =link_to h("My Community"), user_path(current_user)
      |
    .entry
      =link_to t("layouts.application.settings"), settings_path
      |

    -top_bar_links.each do |link|
      .entry
        =link
        |
    .entry
      =link_to t("layouts.application.logout"), destroy_user_session_path

  -else
    -if AppConfig.is_shapadocom && !current_group.isolate
      .entry
        =link_to t("doc.plans.plans"), domain_url(:custom => AppConfig.domain, :controller=>"doc",:action=>"plans")
        |
    -top_bar_links.each do |link|
      .entry
        =link
        |

    .entry
      =link_to t("layouts.application.log_in"), new_user_session_path

  .entry
    = render :partial => "shared/contribute"

.clear



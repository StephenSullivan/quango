#toolbar{:style => "float:left;width:160px;"}
  -if logged_in?
    -if !current_group.isolate && AppConfig.enable_groups
      .edition
        %ul.topbar.combobox.left
          %li
            =link_to h(current_group.name), domain_url(:custom => current_group.domain), :style=>"margin-left:7px;"

            %ul
              -current_user.groups(:select => [:name, :domain]).each do |group|
                %li
                  -if group.favicon_path?
                    = image_tag( "#{current_group.favicon_path}", :style => "background-color:#{group.secondary};")
                  -else
                    -#= image_tag("#{current_group.favicon_path}",  :style => "background-color:#{group.secondary};")
                  =link_to h(group.name), domain_url(:custom => group.domain)

  -else
    .edition
      =link_to h(current_group.name), domain_url(:custom => current_group.domain)




#toolbar{:style => "float:right;width:auto;"}
  -if logged_in?
    -if current_user.owner_of?(current_group)
      .entry
        =link_to "&#x2620;", manage_properties_path, :class => "manage_link", :style => "font-size:1.5em;"
        |
    -if current_user.mod_of?(current_group)
      .entry
        =link_to t("layouts.application.moderate"), moderate_path, :class => "moderate_link"
        |
    .entry
      -# @avatar = Avatar.find(current_user.default_avatar)
      -# if @avatar.present?
      -#  - cropped_avatar = @avatar.avatar.process(:thumb,@avatar.avatar_cropping)
      -#  - default_avatar = cropped_avatar.process(:thumb,"18x18").url
      -#  = image_tag default_avatar, :style => "margin-bottom:-4px"
      -# else
      -#  = image_tag "/images/anonymous_avatar.png", :height => "18px", :width => "18px"



      %strong= link_to(h(current_user.login), user_path(current_user))
      %span.reputation{:title => t("activerecord.attributes.user.reputation"), :style => "background-color:"+current_group.primary+""}=format_number(current_user.reputation_on(current_group))
      |
    .entry
      =link_to h("My Edition"), user_path(current_user)
      | 
    .entry
      =link_to h("My Profile"), user_path(current_user)
      | 
    .entry
      =link_to h("My Community"), user_path(current_user)
      |
    .entry
      =link_to h("My Settings"), settings_path(:tab => "welcome")
      |

  -if !logged_in?

    .entry
      = render :partial => "shared/login"

  -if logged_in?
    .entry
      =link_to t("layouts.application.logout"), destroy_user_session_path
      |
    .entry
      = render :partial => "shared/contribute"


.clear


